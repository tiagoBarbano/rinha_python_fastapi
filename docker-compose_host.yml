version: '3.5'
services:
  fastapi1:
    build: .
    command: ["gunicorn", "main:app", "--workers", "1", "--worker-class", "uvicorn.workers.UvicornWorker", "--bind", "0.0.0.0:8000", "--timeout", "1000"]
    expose:
      - 8000
    environment:
      - user_db=postgres
      - database_db=postgres
      - host_db=localhost
      - password_db=changeme
      - port_db=5432
      - redis_url=redis://redis:6379/0
    depends_on:
      - postgres
    restart: on-failure          
    deploy:
      resources:
        limits:
          cpus: '0.3'
          memory: '0.5GB'
    network_mode: "host"

  fastapi2:
    build: .
    command: ["gunicorn", "main:app", "--workers", "1", "--worker-class", "uvicorn.workers.UvicornWorker", "--bind", "0.0.0.0:8001", "--timeout", "1000"]
    expose: 
      - 8001   
    environment:
      - user_db=postgres
      - database_db=postgres
      - host_db=localhost
      - password_db=changeme
      - port_db=5432
      - redis_url=redis://redis:6379/0
    depends_on:
      - postgres
    restart: on-failure
    deploy:
      resources:
        limits:
          cpus: '0.3'
          memory: '0.5GB'
    network_mode: "host"

  nginx:
    image: nginx:latest
    ports:
      - "9999:9999"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      - fastapi1
      - fastapi2
    restart: on-failure
    deploy:
      resources:
        limits:
          cpus: '0.15'
          memory: '0.5GB'
    network_mode: "host"

  postgres:
    image: postgres
    container_name: postgres
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-changeme}
      PGDATA: /data/postgres
    volumes:
      - ./sql.sql:/docker-entrypoint-initdb.d/sql.sql
    expose:
      - 5432
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '0.75'
          memory: '1GB'
    network_mode: "host"

  # redis:
  #   image: redis:latest
  #   ports:
  #     - "6379:6379"
  #   network_mode: "host"
  #   command: redis-server --save "" --appendonly no --maxclients 10000
  #   deploy:
  #     resources:
  #       limits:
  #         cpus: '0.1'
  #         memory: '0.5GB'