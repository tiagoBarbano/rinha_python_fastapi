version: '3.5'
services:
  fastapi1:
    build: .
    command: ["gunicorn", "main:app", "--workers", "2", "--worker-class", "uvicorn.workers.UvicornWorker", "--bind", "0.0.0.0:8002", "--timeout", "1000"]
    environment:
      - user_db=user
      - database_db=rinha
      - host_db=localhost
      - password_db=10203040
      - port_db=5432
      - database_url=postgresql://user:10203040@localhost:5432/rinha
      - num_con_pg=150
    depends_on:
      - postgres
    restart: on-failure          
    deploy:
      resources:
        limits:
          cpus: '0.9'
          memory: '0.75GB'
    network_mode: "host"

  fastapi2:
    build: .
    command: ["gunicorn", "main:app", "--workers", "2", "--worker-class", "uvicorn.workers.UvicornWorker", "--bind", "0.0.0.0:8001", "--timeout", "1000"]
    environment:
      - user_db=user
      - database_db=rinha
      - host_db=localhost
      - password_db=10203040
      - port_db=5432
      - database_url=postgresql://user:10203040@localhost:5432/rinha
      - num_con_pg=150
    depends_on:
      - postgres
    restart: on-failure
    deploy:
      resources:
        limits:
          cpus: '0.9'
          memory: '0.75GB'
    network_mode: "host"

  nginx:
    image: nginx:latest
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      - fastapi1
      - fastapi2
    restart: on-failure
    network_mode: "host"
    deploy:
      resources:
        limits:
          cpus: '0.1'
          memory: '0.5GB'

  postgres:
    image: postgres:latest
    hostname: db
    environment:
      POSTGRES_PASSWORD: 10203040
      POSTGRES_USER: user
      POSTGRES_DB: rinha
    volumes:
      - ./sql1.sql:/docker-entrypoint-initdb.d/sql1.sql
      - ./postgres.conf:/etc/postgresql/postgresql.conf
    command: ["postgres", "-c", "config_file=/etc/postgresql/postgresql.conf"]
    network_mode: host
    # deploy:
    #   resources:
    #     limits:
    #       cpus: "3"
    #       memory: "5GB"